{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Data storage of CodeMatcher such as S3 buckets. This are necessary to host the web applications because all the lambda function code zips and static files of react are stored in here.",
  "Resources": {
    
    "UserTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "email",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "email",
            "KeyType": "HASH"
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "TableName": "user_cf_7"
      }
    },
    "LikesTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "N"
          },
          {
            "AttributeName": "email",
            "AttributeType": "S"
          },
          {
            "AttributeName": "sEmail",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "email-index",
            "KeySchema": [
              {
                "AttributeName": "email",
                "KeyType": "HASH"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          },
          {
            "IndexName": "sEmail-index",
            "KeySchema": [
              {
                "AttributeName": "sEmail",
                "KeyType": "HASH"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            }
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1
        },
        "TableName": "likes_cf_7"
      }
    },

    "CodeMatcherProfile": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "Description": "use to store the profile pictures of the user.",
      "Properties": {
        "BucketName": "profile-of-user-g35-cf-55",
        "AccessControl": "PublicRead",
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": false,
          "BlockPublicPolicy": false,
          "IgnorePublicAcls": false,
          "RestrictPublicBuckets": false
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        },
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "BucketForFrontend": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "Description": "use to cache react build of frontend",
      "Properties": {
        "BucketName": "frontend-g35-cf-55",
        "AccessControl": "PublicRead",
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": false,
          "BlockPublicPolicy": false,
          "IgnorePublicAcls": false,
          "RestrictPublicBuckets": false
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        },
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "BucketForLambda": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "Description": "use to store the lambda function zip to use it in cloud formation",
      "Properties": {
        "BucketName": "lambda-g35-cf-55",
        "AccessControl": "PublicRead",
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": false,
          "BlockPublicPolicy": false,
          "IgnorePublicAcls": false,
          "RestrictPublicBuckets": false
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        },
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    }

  }
}
